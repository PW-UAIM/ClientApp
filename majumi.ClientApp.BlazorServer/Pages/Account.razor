@page "/account"
@using majumi.CarService.ClientsAppService.Rest.Model.Model;
@inject IController controller
@inject IModel model
@inject NavigationManager NavManager
@inject DialogService DialogService
<RadzenDialog />



<div class="col-lg-10 col-12 text-center mx-auto">
    <p>
        <br>
    </p>
    <h2 class="mb-1">Moje konto</h2>
</div>



<div class="container-fluid py-5">
    <div class="container">
        <div class="row mt-4">
            <div class="col-md-4">
                <div class="d-flex align-items-center border mb-4 mb-lg-0 p-4" style="height: 120px;">
                    <i class="bi-person-workspace mr-3"></i>
                    <div class="d-flex flex-column">
                        <h5 class="font-weight-bold">Imię</h5>
                        <p class="m-0"><RadzenLabel Text="@($"{(model.LoggedClient == null ? "null" : model.LoggedClient.FirstName)}")"></RadzenLabel></p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="d-flex align-items-center border mb-4 mb-lg-0 p-4" style="height: 120px;">
                    <i class=" bi-person-video3 mr-3"></i>
                    <div class="d-flex flex-column">
                        <h5 class="font-weight-bold">Nazwisko</h5>
                        <p class="m-0"><RadzenLabel Text="@($"{(model.LoggedClient == null ? "null" : model.LoggedClient.LastName)}")"></RadzenLabel></p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="d-flex align-items-center border mb-4 mb-lg-0 p-4" style="height: 120px;">
                    <i class="bi-geo-alt mr-3"></i>
                    <div class="d-flex flex-column">
                        <h5 class="font-weight-bold">Adres</h5>
                        <p class="m-0"><RadzenLabel Text="@($"{(model.LoggedClient == null ? "null" : model.LoggedClient.Address)}")"></RadzenLabel></p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-md-4">
                <div class="d-flex align-items-center border mb-4 mb-lg-0 p-4" style="height: 120px;">
                    <i class="bi-envelope-open mr-3"></i>
                    <div class="d-flex flex-column">
                        <h5 class="font-weight-bold">E-mail</h5>
                        <p class="m-0"><RadzenLabel Text="@($"{(model.LoggedClient == null ? "null" : model.LoggedClient.Email)}")"></RadzenLabel></p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="d-flex align-items-center border mb-4 mb-lg-0 p-4" style="height: 120px;">
                    <i class=" bi-list-check mr-3"></i>
                    <div class="d-flex flex-column">
                        <h5 class="font-weight-bold">Firma ubezpieczeniowa</h5>
                        <p class="m-0"><RadzenLabel Text="@($"{(model.LoggedClient == null ? "null" : model.LoggedClient.InsuranceCompany)}")"></RadzenLabel></p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="d-flex align-items-center border mb-4 mb-lg-0 p-4" style="height: 120px;">
                    <i class="bi-list-check mr-3"></i>
                    <div class="d-flex flex-column">
                        <h5 class="font-weight-bold">Numer polisy</h5>
                        <p class="m-0"><RadzenLabel Text="@($"{(model.LoggedClient == null ? "null" : model.LoggedClient.PolicyNumber)}")"></RadzenLabel></p>
                    </div>
                </div>
            </div>

        </div>
        <div class="row mt-4">
            <div class="col-md-4">
                <div class="d-flex align-items-center border mb-4 mb-lg-0 p-4" style="height: 120px;">
                    <i class="bi-phone mr-3"></i>
                    <div class="d-flex flex-column">
                        <h5 class="font-weight-bold">Numer Telefonu</h5>
                        <p class="m-0"><RadzenLabel Text="@($"{(model.LoggedClient == null ? "null" : model.LoggedClient.PhoneNumber)}")"></RadzenLabel></p>
                    </div>
                </div>
            </div>

        </div>
    </div>

</div>

<div class="col-lg-10 col-12 text-center mx-auto">
    <h2 class="mb-5">Moje samochody</h2>
</div>
<div class="container-fluid">
    <div class="container">
        <RadzenDataGrid style="height: 335px; margin: 0; padding:0;" @ref="carGrid" class=" ms-lg-auto shadow-lg img-fluid site-footer-bottom" IsLoading=@isCarGridLoading Count="@carGridCount" Data="@cars" LoadData="@LoadCarData" TItem="CarData">
            <Columns>
                <RadzenDataGridColumn TItem="CarData" Property="CarID" Title="CarID" />
                <RadzenDataGridColumn TItem="CarData" Property="Make" Title="Make" />
                <RadzenDataGridColumn TItem="CarData" Property="Model" Title="Model" />
                <RadzenDataGridColumn TItem="CarData" Property="EngineSize" Title="EngineSize" />
                <RadzenDataGridColumn TItem="CarData" Property="LicensePlate" Title="LicensePlate" />
                <RadzenDataGridColumn TItem="CarData" Property="Mileage" Title="Mileage" />
                <RadzenDataGridColumn TItem="CarData" Property="VIN" Title="VIN" />
                <RadzenDataGridColumn TItem="CarData" Property="Year" Title="Year" />
            </Columns>
        </RadzenDataGrid>
        <p></p> 
         <RadzenButton Text="Dodaj auto" Click=RedirectToAddCar type="submit" class="nav-link custom-btn custom-border-btn btn" />
 
        
    </div>

</div>

<div class="col-lg-10 col-12 text-center mx-auto">
    <h2 class="mb-5">Moje przeglądy</h2>
</div>
<div class="container-fluid">
    <div class="container"  style="margin-bottom: 3em;">
        <RadzenDataGrid style="height: 335px; margin: 0; padding:0;" @ref="visitsGrid" class=" ms-lg-auto shadow-lg img-fluid site-footer-bottom" IsLoading=@isVisitGridLoading Count="@visitGridCount" Data="@visits" LoadData="@LoadVisitData" TItem="VisitData">
            <Columns>
                <RadzenDataGridColumn TItem="VisitData" Property="CarID" Title="CarID" />
                <RadzenDataGridColumn TItem="VisitData" Property="ClientID" Title="ClientID" />
                <RadzenDataGridColumn TItem="VisitData" Property="Notes" Title="Notes" />
                <RadzenDataGridColumn TItem="VisitData" Property="ServiceCost" Title="ServiceCost" />
                <RadzenDataGridColumn TItem="VisitData" Property="ServiceDate" Title="ServiceDate" />
                <RadzenDataGridColumn TItem="VisitData" Property="ServiceStatus" Title="ServiceStatus" />
                <RadzenDataGridColumn TItem="VisitData" Property="ServiceType" Title="ServiceType" />
            </Columns>
        </RadzenDataGrid>
        <p> </p>
        <RadzenButton Text="Zapisz się na przegląd" Click=RedirectToAddVisit type="submit" class="nav-link custom-btn custom-border-btn btn" />
    </div>

</div>

   
@code {
    RadzenDataGrid<CarData> carGrid;
    IEnumerable<CarData> cars;
    int carGridCount;
    bool isCarGridLoading = false;

    protected override void OnInitialized()
    {
        //Check if client is logged in
        if (model.ClientID == 0 || model.LoginConfirmation == false)
        {
            NavManager.NavigateTo("/login");
        }
    }

    async Task LoadCarData(LoadDataArgs args)
    {
        isCarGridLoading = true;

        await controller.LoadCarsAsync();
        cars = model.CarList;
        carGridCount = cars.Count();
        isCarGridLoading = false;
    }

    private async Task RedirectToAddCar()
    {
        await DialogService.OpenAsync<AddCar>("Dodaj auto");
        await carGrid.Reload();
    }
}


@code {
    RadzenDataGrid<VisitData> visitsGrid;
    IEnumerable<VisitData> visits;
    int visitGridCount;
    bool isVisitGridLoading = false;

    async Task LoadVisitData(LoadDataArgs args)
    {
        isVisitGridLoading = true;

        await controller.LoadVisitsAsync();
        visits = model.VisitList;
        visitGridCount = visits.Count();
        isVisitGridLoading = false;
    }

    private async Task RedirectToAddVisit()
    {
        await DialogService.OpenAsync<AddVisit>("Zapisz się na przegląd");
        await visitsGrid.Reload();
    }

}


@code {
    RadzenDataGrid<ClientData> clientsGrid;
    IEnumerable<ClientData> client;
    bool isClientGridLoading = false;

    async Task LoadClientData(LoadDataArgs args)
    {
        isClientGridLoading = true;

        await controller.LoadVisitsAsync();
        isClientGridLoading = false;
    }
}